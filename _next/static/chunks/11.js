(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([[11],{

/***/ "./node_modules/audio-recorder-polyfill/mpeg-encoder/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/audio-recorder-polyfill/mpeg-encoder/index.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (() => {\n  importScripts(\n    'https://cdnjs.cloudflare.com/ajax/libs/lamejs/1.2.0/lame.min.js'\n  )\n\n  let CHANNELS = 1\n  let KBPS = 128\n  let DEFAULT_SAMPLE_RATE = 44100\n\n  let encoder\n  let recorded = new Int8Array()\n\n  function concat (a, b) {\n    if (b.length === 0) {\n      return a\n    }\n    let c = new Int8Array(a.length + b.length)\n    c.set(a)\n    c.set(b, a.length)\n    return c\n  }\n\n  function init (sampleRate) {\n    encoder = new lamejs.Mp3Encoder(\n      CHANNELS,\n      sampleRate || DEFAULT_SAMPLE_RATE,\n      KBPS\n    )\n  }\n\n  function encode (buffer) {\n    for (let i = 0; i < buffer.length; i++) {\n      buffer[i] = buffer[i] * 32767.5\n    }\n\n    let buf = encoder.encodeBuffer(buffer)\n    recorded = concat(recorded, buf)\n  }\n\n  function dump () {\n    let buf = encoder.flush()\n    recorded = concat(recorded, buf)\n    let buffer = recorded.buffer\n    recorded = new Int8Array()\n    postMessage(buffer, [buffer])\n  }\n\n  onmessage = e => {\n    if (e.data[0] === 'init') {\n      init(e.data[1])\n    } else if (e.data[0] === 'encode') {\n      encode(e.data[1])\n    } else {\n      dump(e.data[1])\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2F1ZGlvLXJlY29yZGVyLXBvbHlmaWxsL21wZWctZW5jb2Rlci9pbmRleC5qcz81MTY1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLG1CQUFtQjtBQUN0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hdWRpby1yZWNvcmRlci1wb2x5ZmlsbC9tcGVnLWVuY29kZXIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gIGltcG9ydFNjcmlwdHMoXG4gICAgJ2h0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2xhbWVqcy8xLjIuMC9sYW1lLm1pbi5qcydcbiAgKVxuXG4gIGxldCBDSEFOTkVMUyA9IDFcbiAgbGV0IEtCUFMgPSAxMjhcbiAgbGV0IERFRkFVTFRfU0FNUExFX1JBVEUgPSA0NDEwMFxuXG4gIGxldCBlbmNvZGVyXG4gIGxldCByZWNvcmRlZCA9IG5ldyBJbnQ4QXJyYXkoKVxuXG4gIGZ1bmN0aW9uIGNvbmNhdCAoYSwgYikge1xuICAgIGlmIChiLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIGFcbiAgICB9XG4gICAgbGV0IGMgPSBuZXcgSW50OEFycmF5KGEubGVuZ3RoICsgYi5sZW5ndGgpXG4gICAgYy5zZXQoYSlcbiAgICBjLnNldChiLCBhLmxlbmd0aClcbiAgICByZXR1cm4gY1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdCAoc2FtcGxlUmF0ZSkge1xuICAgIGVuY29kZXIgPSBuZXcgbGFtZWpzLk1wM0VuY29kZXIoXG4gICAgICBDSEFOTkVMUyxcbiAgICAgIHNhbXBsZVJhdGUgfHwgREVGQVVMVF9TQU1QTEVfUkFURSxcbiAgICAgIEtCUFNcbiAgICApXG4gIH1cblxuICBmdW5jdGlvbiBlbmNvZGUgKGJ1ZmZlcikge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmZmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBidWZmZXJbaV0gPSBidWZmZXJbaV0gKiAzMjc2Ny41XG4gICAgfVxuXG4gICAgbGV0IGJ1ZiA9IGVuY29kZXIuZW5jb2RlQnVmZmVyKGJ1ZmZlcilcbiAgICByZWNvcmRlZCA9IGNvbmNhdChyZWNvcmRlZCwgYnVmKVxuICB9XG5cbiAgZnVuY3Rpb24gZHVtcCAoKSB7XG4gICAgbGV0IGJ1ZiA9IGVuY29kZXIuZmx1c2goKVxuICAgIHJlY29yZGVkID0gY29uY2F0KHJlY29yZGVkLCBidWYpXG4gICAgbGV0IGJ1ZmZlciA9IHJlY29yZGVkLmJ1ZmZlclxuICAgIHJlY29yZGVkID0gbmV3IEludDhBcnJheSgpXG4gICAgcG9zdE1lc3NhZ2UoYnVmZmVyLCBbYnVmZmVyXSlcbiAgfVxuXG4gIG9ubWVzc2FnZSA9IGUgPT4ge1xuICAgIGlmIChlLmRhdGFbMF0gPT09ICdpbml0Jykge1xuICAgICAgaW5pdChlLmRhdGFbMV0pXG4gICAgfSBlbHNlIGlmIChlLmRhdGFbMF0gPT09ICdlbmNvZGUnKSB7XG4gICAgICBlbmNvZGUoZS5kYXRhWzFdKVxuICAgIH0gZWxzZSB7XG4gICAgICBkdW1wKGUuZGF0YVsxXSlcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/audio-recorder-polyfill/mpeg-encoder/index.js\n");

/***/ })

}]);